<!DOCTYPE html>
<html>
<head>
  <%-include('../partials/head'); %>
  <title>Sensor Data</title>
</head>
<header>
  <%-include('../partials/header'); %>
</header>
<body>
  <div class="modal fade" id="create-notification-modal" tabindex="-1" aria-labelledby="create-notification-modal-label" aria-hidden="true" data-bs-backdrop="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="create-notification-modal-label">Create Notification</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form action="/create-notification" method="POST">
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="temperature-checkbox">
              <label class="form-check-label" for="temperature-checkbox">Temperature</label>
              <input type="number" class="form-control d-none" id="temperature-input" name="temperature">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="pressure-checkbox">
              <label class="form-check-label" for="pressure-checkbox">Pressure</label>
              <input type="number" class="form-control d-none" id="pressure-input" name="pressure">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="humidity-checkbox">
              <label class="form-check-label" for="humidity-checkbox">Humidity</label>
              <input type="number" class="form-control d-none" id="humidity-input" name="humidity">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="light-checkbox">
              <label class="form-check-label" for="light-checkbox">Light</label>
              <input type="number" class="form-control d-none" id="light-input" name="light">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="oxidised-checkbox">
              <label class="form-check-label" for="oxidised-checkbox">Oxidised</label>
              <input type="number" class="form-control d-none" id="oxidised-input" name="oxidised">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="reduced-checkbox">
              <label class="form-check-label" for="reduced-checkbox">Reduced</label>
              <input type="number" class="form-control d-none" id="reduced-input" name="reduced">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="nh3-checkbox">
              <label class="form-check-label" for="nh3-checkbox">NH3</label>
              <input type="number" class="form-control d-none" id="nh3-input" name="nh3">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="pm1-checkbox">
              <label class="form-check-label" for="pm1-checkbox">PM 1</label>
              <input type="number" class="form-control d-none" id="pm1-input" name="pm1">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="pm25-checkbox">
              <label class="form-check-label" for="pm25-checkbox">PM 2.5</label>
              <input type="number" class="form-control d-none" id="pm25-input" name="pm25">
            </div>
            <div class="mb-3 form-check">
              <input type="checkbox" class="form-check-input" id="pm10-checkbox">
              <label class="form-check-label" for="pm10-checkbox">PM 10</label>
              <input type="number" class="form-control d-none" id="pm10-input" name="pm10">
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <script>
    const temperatureCheckbox = document.querySelector('#temperature-checkbox');
    const temperatureInput = document.querySelector('#temperature-input');
    temperatureCheckbox.addEventListener('change', () => {
      temperatureInput.classList.toggle('d-none');
    });
  
    const pressureCheckbox = document.querySelector('#pressure-checkbox');
    const pressureInput = document.querySelector('#pressure-input');
    pressureCheckbox.addEventListener('change', () => {
      pressureInput.classList.toggle('d-none');
    });
  
    const humidityCheckbox = document.querySelector('#humidity-checkbox');
    const humidityInput = document.querySelector('#humidity-input');
    humidityCheckbox.addEventListener('change', () => {
      humidityInput.classList.toggle('d-none');
    });

    const lightCheckbox = document.querySelector('#light-checkbox');
    const lightInput = document.querySelector('#light-input');
    lightCheckbox.addEventListener('change', () => {
      lightInput.classList.toggle('d-none');
    });

    const oxidisedCheckbox = document.querySelector('#oxidised-checkbox');
    const oxidisedInput = document.querySelector('#oxidised-input');
    oxidisedCheckbox.addEventListener('change', () => {
      oxidisedInput.classList.toggle('d-none');
    });

    const reducedCheckbox = document.querySelector('#reduced-checkbox');
    const reducedInput = document.querySelector('#reduced-input');
    reducedCheckbox.addEventListener('change', () => {
      reducedInput.classList.toggle('d-none');
    });

    const nh3Checkbox = document.querySelector('#nh3-checkbox');
    const nh3Input = document.querySelector('#nh3-input');
    nh3Checkbox.addEventListener('change', () => {
      nh3Input.classList.toggle('d-none');
    });

    const pm1Checkbox = document.querySelector('#pm1-checkbox');
    const pm1Input = document.querySelector('#pm1-input');
    pm1Checkbox.addEventListener('change', () => {
      pm1Input.classList.toggle('d-none');
    });
    
    const pm25Checkbox = document.querySelector('#pm25-checkbox');
    const pm25Input = document.querySelector('#pm25-input');
    pm25Checkbox.addEventListener('change', () => {
      pm25Input.classList.toggle('d-none');
    });

    const pm10Checkbox = document.querySelector('#pm10-checkbox');
    const pm10Input = document.querySelector('#pm10-input');
    pm10Checkbox.addEventListener('change', () => {
      pm10Input.classList.toggle('d-none');
    });
  </script>

<div class="row">
  <div class="col-md-6">
    <canvas id="temperature-chart"></canvas>
  </div>
  <div class="col-md-6">
    <canvas id="pressure-chart"></canvas>
  </div>
</div>
<div class="row">
  <div class="col-md-6">
    <canvas id="humidity-chart"></canvas>
  </div>
  <div class="col-md-6">
    <canvas id="light-chart"></canvas>
  </div>
</div>
<div class="row">
  <div class="col-md-6">
    <canvas id="oxidised-chart"></canvas>
  </div>
  <div class="col-md-6">
    <canvas id="reduced-chart"></canvas>
  </div>
</div>
<div class="row">
  <div class="col-md-6">
    <canvas id="nh3-chart"></canvas>
  </div>
  <div class="col-md-6">
    <canvas id="pm1-chart"></canvas>
  </div>
  <div class="col-md-6">
    <canvas id="pm25-chart"></canvas>
  </div>
  <div class="col-md-6">
    <canvas id="pm10-chart"></canvas>
  </div>
</div>
    <script>
        let data = <%-JSON.stringify(data)%>
        let time = data.map(d => d.time)
        let temperature = data.map(d => d.temperature)
        let pressure = data.map(d => d.pressure)
        let humidity = data.map(d => d.humidity)
        let light = data.map(d => d.light)
        let oxidised = data.map(d => d.oxidised)
        let reduced = data.map(d => d.reduced)
        let nh3 = data.map(d => d.nh3)
        let pm1 = data.map(d => d.pm1)
        let pm25 = data.map(d => d.pm25)
        let pm10 = data.map(d => d.pm10)
        let redLineData = {
          x: 0,
          y: 35,
          // end of the line
          x2: time[time.length-1],
          y2: 35,
          borderColor: "red",
          borderWidth: 2
        };
        let NitroLine = {
          x: 0,
          y: 40,
          // end of the line
          x2: time[time.length-1],
          y2: 40,
          borderColor: "orange",
          borderWidth: 2
        };
        let COLine = {
          x: 0,
          y: 1000,
          // end of the line
          x2: time[time.length-1],
          y2: 1000,
          borderColor: "red",
          borderWidth: 2
        };
        let AmmLine = {
          x: 0,
          y: 400,
          // end of the line
          x2: time[time.length-1],
          y2: 400,
          borderColor: "red",
          borderWidth: 2
        };
        let Pm1Line = {
          x: 0,
          y: 10,
          // end of the line
          x2: time[time.length-1],
          y2: 10,
          borderColor: "orange",
          borderWidth: 2
        };
        let Pm10Line = {
          x: 0,
          y: 14,
          // end of the line
          x2: time[time.length-1],
          y2: 14,
          borderColor: "orange",
          borderWidth: 2
        };
        let Pm25Line = {
          x: 0,
          y: 15,
          // end of the line
          x2: time[time.length-1],
          y2: 15,
          borderColor: "orange",
          borderWidth: 2
        };
    
        let temperatureChart = new Chart(document.getElementById("temperature-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: temperature,
            label: "Temperature",
            borderColor: "#68ff00 ",
            fill: true
          },
          {
            data: [
              { x: redLineData.x, y: redLineData.y },
              { x: redLineData.x2, y: redLineData.y2 }
            ],
            borderColor: redLineData.borderColor,
            borderWidth: redLineData.borderWidth,
            pointRadius: 0,
            label: "Too Hot",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
          
        let pressureChart = new Chart(document.getElementById("pressure-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: pressure,
            label: "Pressure",
            borderColor: "#00ffb9",
            fill: true
          }]}});
          
        let humidityChart = new Chart(document.getElementById("humidity-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: humidity,
            label: "Humidity",
            borderColor: "#0049ff",
            fill: true
          }]}});
          
        let lightChart = new Chart(document.getElementById("light-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: light,
            label: "Light",
            borderColor: "#f300ff",
            fill: true
          }]}});
          
        let oxidisedChart = new Chart(document.getElementById("oxidised-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: oxidised,
            label: "Nitrogen Dioxide",
            borderColor: "#ff0093 ",
            fill: true
          },
          {
            data: [
              { x: NitroLine.x, y: NitroLine.y },
              { x: NitroLine.x2, y: NitroLine.y2 }
            ],
            borderColor: NitroLine.borderColor,
            borderWidth: NitroLine.borderWidth,
            pointRadius: 0,
            label: "Caution",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
        let reducedChart = new Chart(document.getElementById("reduced-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: reduced,
            label: "Cardbon Monoxide",
            borderColor: "#f0ff00 ",
            fill: true
          },
          {
            data: [
              { x: COLine.x, y: COLine.y },
              { x: COLine.x2, y: COLine.y2 }
            ],
            borderColor: COLine.borderColor,
            borderWidth: COLine.borderWidth,
            pointRadius: 0,
            label: "Danger",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
        let nh3Chart = new Chart(document.getElementById("nh3-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: nh3,
            label: "Ammonia",
            borderColor: "#280092 ",
            fill: true
          },
          {
            data: [
              { x: AmmLine.x, y: AmmLine.y },
              { x: AmmLine.x2, y: AmmLine.y2 }
            ],
            borderColor: AmmLine.borderColor,
            borderWidth: AmmLine.borderWidth,
            pointRadius: 0,
            label: "Danger",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
        let pm1Chart = new Chart(document.getElementById("pm1-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: pm1,
            label: "PM1",
            borderColor: "#000000",
            fill: true
          },
          {
            data: [
              { x: Pm1Line.x, y: Pm1Line.y },
              { x: Pm1Line.x2, y: Pm1Line.y2 }
            ],
            borderColor: Pm1Line.borderColor,
            borderWidth: Pm1Line.borderWidth,
            pointRadius: 0,
            label: "Harmful",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
          let pm25Chart = new Chart(document.getElementById("pm25-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: pm25,
            label: "PM25",
            borderColor: "#64a6c9 ",
            fill: true
          },
          {
            data: [
              { x: Pm25Line.x, y: Pm25Line.y },
              { x: Pm25Line.x2, y: Pm25Line.y2 }
            ],
            borderColor: Pm25Line.borderColor,
            borderWidth: Pm25Line.borderWidth,
            pointRadius: 0,
            label: "Harmful",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
          let pm10Chart = new Chart(document.getElementById("pm10-chart"), {
          type: 'line',
            data: {
            labels: time,
          datasets: [{ 
            data: pm10,
            label: "PM10",
            borderColor: "#c14c8a ",
            fill: true
          },
          {
            data: [
              { x: Pm10Line.x, y: Pm10Line.y },
              { x: Pm10Line.x2, y: Pm10Line.y2 }
            ],
            borderColor: Pm10Line.borderColor,
            borderWidth: Pm10Line.borderWidth,
            pointRadius: 0,
            label: "Harmful",
            fill: false,
            lineTension: 15,
            type: 'line'
          }]}});
                  </script>
  <footer>
    <%- include('../partials/footer'); %>
  </footer>
  <script>
    const createNotificationButton = document.querySelector('#create-notification-button');
    const createNotificationModal = new bootstrap.Modal(document.querySelector('#create-notification-modal'));
    createNotificationButton.addEventListener('click', () => {
    createNotificationModal.show();
});
  </script>
</body>
</html>
